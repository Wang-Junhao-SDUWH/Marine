C51 COMPILER V9.00   I2C                                                                   10/15/2019 21:56:19 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\I2C.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE I2C.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\I2C.l
                    -st) TABS(2) OBJECT(.\Objects\I2C.obj)

line level    source

   1          
   2          /*************************此部分为I2C总线的驱动程序*************************************/
   3          
   4          #include <reg52.h>
   5          #include <intrins.h>
   6          #include <I2C.H>
   7          
   8          #define  NOP()   _nop_()   /* 定义空指令 */
   9          #define  _Nop()  _nop_()   /*定义空指令*/
  10          
  11           
  12          sbit     SCL=P1^6;       //I2C  时钟 
  13          sbit     SDA=P1^7;       //I2C  数据 
  14          bit ack;                 /*应答标志位*/
  15          /*******************************************************************
  16                               起动总线函数               
  17          函数原型: void  Start_I2c();  
  18          功能:     启动I2C总线,即发送I2C起始条件.  
  19          ********************************************************************/
  20          void Start_I2c()
  21          {
  22   1        SDA=1;         /*发送起始条件的数据信号*/
  23   1        _Nop();
  24   1        SCL=1;
  25   1        _Nop();        /*起始条件建立时间大于4.7us,延时*/
  26   1        _Nop();
  27   1        _Nop();
  28   1        _Nop();
  29   1        _Nop();    
  30   1        SDA=0;         /*发送起始信号*/
  31   1        _Nop();        /* 起始条件锁定时间大于4μs*/
  32   1        _Nop();
  33   1        _Nop();
  34   1        _Nop();
  35   1        _Nop();       
  36   1        SCL=0;       /*钳住I2C总线，准备发送或接收数据 */
  37   1        _Nop();
  38   1        _Nop();
  39   1      }
  40          
  41          /*******************************************************************
  42                                结束总线函数               
  43          函数原型: void  Stop_I2c();  
  44          功能:     结束I2C总线,即发送I2C结束条件.  
  45          ********************************************************************/
  46          void Stop_I2c()
  47          {
  48   1        SDA=0;      /*发送结束条件的数据信号*/
  49   1        _Nop();       /*发送结束条件的时钟信号*/
  50   1        SCL=1;      /*结束条件建立时间大于4μs*/
  51   1        _Nop();
  52   1        _Nop();
  53   1        _Nop();
  54   1        _Nop();
C51 COMPILER V9.00   I2C                                                                   10/15/2019 21:56:19 PAGE 2   

  55   1        _Nop();
  56   1        SDA=1;      /*发送I2C总线结束信号*/
  57   1        _Nop();
  58   1        _Nop();
  59   1        _Nop();
  60   1        _Nop();
  61   1      }
  62          
  63          /*******************************************************************
  64                           字节数据发送函数               
  65          函数原型: void  SendByte(UCHAR c);
  66          功能:     将数据c发送出去,可以是地址,也可以是数据,发完后等待应答,并对
  67                    此状态位进行操作.(不应答或非应答都使ack=0)     
  68                     发送数据正常，ack=1; ack=0表示被控器无应答或损坏。
  69          ********************************************************************/
  70          void  SendByte(unsigned char  c)
  71          {
  72   1       unsigned char  BitCnt;
  73   1       
  74   1       for(BitCnt=0;BitCnt<8;BitCnt++)  /*要传送的数据长度为8位*/
  75   1          {
  76   2           if((c<<BitCnt)&0x80)SDA=1;   /*判断发送位*/
  77   2             else  SDA=0;                
  78   2           _Nop();
  79   2           SCL=1;               /*置时钟线为高，通知被控器开始接收数据位*/
  80   2            _Nop(); 
  81   2            _Nop();             /*保证时钟高电平周期大于4μs*/
  82   2            _Nop();
  83   2            _Nop();
  84   2            _Nop();         
  85   2           SCL=0; 
  86   2          }
  87   1          
  88   1          _Nop();
  89   1          _Nop();
  90   1          SDA=1;                /*8位发送完后释放数据线，准备接收应答位*/
  91   1          _Nop();
  92   1          _Nop();   
  93   1          SCL=1;
  94   1          _Nop();
  95   1          _Nop();
  96   1          _Nop();
  97   1          if(SDA==1)ack=0;     
  98   1             else ack=1;        /*判断是否接收到应答信号*/
  99   1          SCL=0;
 100   1          _Nop();
 101   1          _Nop();
 102   1      }
 103          
 104          /*******************************************************************
 105                           字节数据接收函数               
 106          函数原型: UCHAR  RcvByte();
 107          功能:        用来接收从器件传来的数据,并判断总线错误(不发应答信号)，
 108                    发完后请用应答函数应答从机。  
 109          ********************************************************************/    
 110          unsigned char   RcvByte()
 111          {
 112   1        unsigned char  retc;
 113   1        unsigned char  BitCnt;
 114   1        
 115   1        retc=0; 
 116   1        SDA=1;                     /*置数据线为输入方式*/
C51 COMPILER V9.00   I2C                                                                   10/15/2019 21:56:19 PAGE 3   

 117   1        for(BitCnt=0;BitCnt<8;BitCnt++)
 118   1            {
 119   2              _Nop();           
 120   2              SCL=0;                  /*置时钟线为低，准备接收数据位*/
 121   2              _Nop();
 122   2              _Nop();                 /*时钟低电平周期大于4.7μs*/
 123   2              _Nop();
 124   2              _Nop();
 125   2              _Nop();
 126   2              SCL=1;                  /*置时钟线为高使数据线上数据有效*/
 127   2              _Nop();
 128   2              _Nop();
 129   2              retc=retc<<1;
 130   2              if(SDA==1)retc=retc+1;  /*读数据位,接收的数据位放入retc中 */
 131   2              _Nop();
 132   2              _Nop(); 
 133   2            }
 134   1        SCL=0;    
 135   1        _Nop();
 136   1        _Nop();
 137   1        return(retc);
 138   1      }
 139          
 140          /********************************************************************
 141                               应答子函数
 142          函数原型:  void Ack_I2c(bit a);
 143          功能:      主控器进行应答信号(可以是应答或非应答信号，由位参数a决定)
 144          ********************************************************************/
 145          void Ack_I2c(bit a)
 146          {
 147   1        
 148   1        if(a==0)SDA=0;              /*在此发出应答或非应答信号 */
 149   1        else SDA=1;
 150   1        _Nop();
 151   1        _Nop();
 152   1        _Nop();      
 153   1        SCL=1;
 154   1        _Nop();
 155   1        _Nop();                    /*时钟低电平周期大于4μs*/
 156   1        _Nop();
 157   1        _Nop();
 158   1        _Nop();  
 159   1        SCL=0;                     /*清时钟线，钳住I2C总线以便继续接收*/
 160   1        _Nop();
 161   1        _Nop();    
 162   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    159    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
