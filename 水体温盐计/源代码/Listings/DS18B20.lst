C51 COMPILER V9.00   DS18B20                                                               10/15/2019 21:56:18 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\Objects\DS18B20.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE DS18B20.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\D
                    -S18B20.lst) TABS(2) OBJECT(.\Objects\DS18B20.obj)

line level    source

   1          #include "DS18B20.h"
   2          /*******************************************************************************
   3          * 函 数 名         : Delay1ms
   4          * 函数功能       : 延时函数
   5          * 输    入         : 无
   6          * 输    出         : 无
   7          *******************************************************************************/
   8          
   9          void Delay1ms(uint y)
  10          {
  11   1        uint x;
  12   1        for( ; y>0; y--)
  13   1        {
  14   2          for(x=110; x>0; x--);
  15   2        }
  16   1      }
  17          /*******************************************************************************
  18          * 函 数 名         : Ds18b20Init
  19          * 函数功能       : 初始化
  20          * 输    入         : 无
  21          * 输    出         : 初始化成功返回1，失败返回0
  22          *******************************************************************************/
  23          
  24          uchar Ds18b20Init()
  25          {
  26   1        uchar i;
  27   1        DSPORT = 0;      //将总线拉低480us~960us
  28   1        i = 70; 
  29   1        while(i--);//延时642us
  30   1        DSPORT = 1;     //然后拉高总线，如果DS18B20做出反应会将在15us~60us后总线拉低
  31   1        i = 0;
  32   1        while(DSPORT) //等待DS18B20拉低总线
  33   1        {
  34   2          Delay1ms(1);
  35   2          i++;
  36   2          if(i>5)//等待>5MS
  37   2          {
  38   3            return 0;//初始化失败
  39   3          }
  40   2        
  41   2        }
  42   1        return 1;//初始化成功
  43   1      }
  44          
  45          /*******************************************************************************
  46          * 函 数 名         : Ds18b20WriteByte
  47          * 函数功能       : 向18B20写入一个字节
  48          * 输    入         : 无
  49          * 输    出         : 无
  50          *******************************************************************************/
  51          
  52          void Ds18b20WriteByte(uchar dat)
  53          {
  54   1        uint i, j;
C51 COMPILER V9.00   DS18B20                                                               10/15/2019 21:56:18 PAGE 2   

  55   1      
  56   1        for(j=0; j<8; j++)
  57   1        {
  58   2          DSPORT = 0;         //每写入一位数据之前先把总线拉低1us
  59   2          i++;
  60   2          DSPORT = dat & 0x01;  //然后写入一个数据，从最低位开始
  61   2          i=6;
  62   2          while(i--); //延时68us，持续时间最少60us
  63   2          DSPORT = 1; //然后释放总线，至少1us给总线恢复时间才能接着写入第二个数值
  64   2          dat >>= 1;
  65   2        }
  66   1      }
  67          /*******************************************************************************
  68          * 函 数 名         : Ds18b20ReadByte
  69          * 函数功能       : 读取一个字节
  70          * 输    入         : 无
  71          * 输    出         : 无
  72          *******************************************************************************/
  73          
  74          
  75          uchar Ds18b20ReadByte()
  76          {
  77   1        uchar byte, bi;
  78   1        uint i, j;  
  79   1        for(j=8; j>0; j--)
  80   1        {
  81   2          DSPORT = 0;//先将总线拉低1us
  82   2          i++;
  83   2          DSPORT = 1;//然后释放总线
  84   2          i++;
  85   2          i++;//延时6us等待数据稳定
  86   2          bi = DSPORT;   //读取数据，从最低位开始读取
  87   2          /*将byte左移一位，然后与上右移7位后的bi，注意移动之后移掉那位补0。*/
  88   2          byte = (byte >> 1) | (bi << 7);             
  89   2          i = 4;    //读取完之后等待48us再接着读取下一个数
  90   2          while(i--);
  91   2        }       
  92   1        return byte;
  93   1      }
  94          /*******************************************************************************
  95          * 函 数 名         : Ds18b20ChangTemp
  96          * 函数功能       : 让18b20开始转换温度
  97          * 输    入         : 无
  98          * 输    出         : 无
  99          *******************************************************************************/
 100          
 101          void  Ds18b20ChangTemp()
 102          {
 103   1        Ds18b20Init();
 104   1        Delay1ms(1);
 105   1        Ds18b20WriteByte(0xcc);   //跳过ROM操作命令    
 106   1        Ds18b20WriteByte(0x44);     //温度转换命令
 107   1        //Delay1ms(100);  //等待转换成功，而如果你是一直刷着的话，就不用这个延时了
 108   1         
 109   1      }
 110          /*******************************************************************************
 111          * 函 数 名         : Ds18b20ReadTempCom
 112          * 函数功能       : 发送读取温度命令
 113          * 输    入         : 无
 114          * 输    出         : 无
 115          *******************************************************************************/
 116          
C51 COMPILER V9.00   DS18B20                                                               10/15/2019 21:56:18 PAGE 3   

 117          void  Ds18b20ReadTempCom()
 118          { 
 119   1      
 120   1        Ds18b20Init();
 121   1        Delay1ms(1);
 122   1        Ds18b20WriteByte(0xcc);  //跳过ROM操作命令
 123   1        Ds18b20WriteByte(0xbe);  //发送读取温度命令
 124   1      }
 125          /*******************************************************************************
 126          * 函 数 名         : Ds18b20ReadTemp
 127          * 函数功能       : 读取温度
 128          * 输    入         : 无
 129          * 输    出         : 无
 130          *******************************************************************************/
 131          
 132          int DS18B20ReadTemp()
 133          {
 134   1        int temp = 0;
 135   1        float tp=0;
 136   1        uchar tmh, tml;
 137   1        Ds18b20ChangTemp();       //先写入转换命令
 138   1        Ds18b20ReadTempCom();     //然后等待转换完后发送读取温度命令
 139   1        tml = Ds18b20ReadByte();    //读取温度值共16位，先读低字节
 140   1        tmh = Ds18b20ReadByte();    //再读高字节
 141   1        temp = tmh;
 142   1        temp <<= 8;
 143   1        temp |= tml;
 144   1        
 145   1        tp=temp;
 146   1        temp=tp*0.0625+0.5;
 147   1        
 148   1        return temp;
 149   1      }
 150          
 151          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    288    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
